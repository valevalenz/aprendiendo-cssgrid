
/* 1 GRID BÁSICO */

.container{
    display:grid;
    /*  Podemos tener 3 columnas de tamaño automático con auto / para asignar el ancho podemos usar auto - porcentaje % - o fr */
    grid-template-columns: 1fr 1fr 1fr;
       /* column-gap y row-gap, las que podemos
    modificar por separado si lo necesitamos. */
    gap: 10px;
}

.grid-item{
    border: 2px black solid;
    display:flex;
    flex-direction: column;
    align-items: center;
}


img{
    width:100%;
    /* con un width más pequeño se ajusta mejor a la pantalla */
    height: auto;
}

/*2 LAYOUT CON GRID*/

/* ejemplo layout */


header{
    background-color:black;
    height: 15px;
    color: white;
    /* 2. nombramos las áreas */
    grid-area:header;
}

aside{
    background-color:yellow;
    height: 90vh;
        /* 2. nombramos las áreas */
    grid-area:aside;
}

main{
    background-color:pink;
    height: 90vh;
    /* 2. nombramos las áreas */
    grid-area:main;
    overflow-y: scroll;
    /* para el scroll */
}

footer{
    background-color:blueviolet;
    height: 20px;
        /* 2. nombramos las áreas */
    grid-area:footer;
}

.container-layout{
    /* 1. activamos grid en el contenedor */
    display:grid;
      /* 3. cuando tenemos las áreas declaradas (paso 2), "dibujamos" el template con la propiedad grid-template-areas */
    grid-template-areas: 
    'header header' 
    'aside main'
    'footer footer';
     /* 4. asignamos el ancho a las columnas. En este caso tenemos 2 */
    grid-template-columns: 20% 80%;
}
